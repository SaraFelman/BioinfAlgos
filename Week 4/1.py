# Задание 1.
# Напишите программу, подсчитывающую количество повторяющихся подстрок(substring) 
# длиной k в большой строке(sequence). 
# Выведете три самые частые k-мера (слова длины k) вместе с числом повторений. 
# В качестве строки возьмите референсный транскрипт гена COL1A2 человека 
# из базы данных NCBI.
# k =7
# ATGCTGC = 3 ; ATGCTGG = 2 ; ATTCTGG = 2

k = int(input())
podstroki = {}
COL1A2 = "agcaccacggcagcaggaggtttcggctaagttggaggtactggccacgactgcatgcccgcgcccgccaggtgatacctccgccggtgacccaggggctctgcgacacaaggagtctgcatgtctaagtgctagacatgctcagctttgtggatacgcggactttgttgctgcttgcagtaaccttatgcctagcaacatgccaatctttacaagaggaaactgtaagaaagggcccagccggagatagaggaccacgtggagaaaggggtccaccaggccccccaggcagagatggtgaagatggtcccacaggccctcctggtccacctggtcctcctggcccccctggtctcggtgggaactttgctgctcagtatgatggaaaaggagttggacttggccctggaccaatgggcttaatgggacctagaggcccacctggtgcagctggagccccaggccctcaaggtttccaaggacctgctggtgagcctggtgaacctggtcaaactggtcctgcaggtgctcgtggtccagctggccctcctggcaaggctggtgaagatggtcaccctggaaaacccggacgacctggtgagagaggagttgttggaccacagggtgctcgtggtttccctggaactcctggacttcctggcttcaaaggcattaggggacacaatggtctggatggattgaagggacagcccggtgctcctggtgtgaagggtgaacctggtgcccctggtgaaaatggaactccaggtcaaacaggagcccgtgggcttcctggtgagagaggacgtgttggtgcccctggcccagctggtgcccgtggcagtgatggaagtgtgggtcccgtgggtcctgctggtcccattgggtctgctggccctccaggcttcccaggtgcccctggccccaagggtgaaattggagctgttggtaacgctggtcctgctggtcccgccggtccccgtggtgaagtgggtcttccaggcctctccggccccgttggacctcctggtaatcctggagcaaacggccttactggtgccaagggtgctgctggccttcccggcgttgctggggctcccggcctccctggaccccgcggtattcctggccctgttggtgctgccggtgctactggtgccagaggacttgttggtgagcctggtccagctggctccaaaggagagagcggtaacaagggtgagcccggctctgctgggccccaaggtcctcctggtcccagtggtgaagaaggaaagagaggccctaatggggaagctggatctgccggccctccaggacctcctgggctgagaggtagtcctggttctcgtggtcttcctggagctgatggcagagctggcgtcatgggccctcctggtagtcgtggtgcaagtggccctgctggagtccgaggacctaatggagatgctggtcgccctggggagcctggtctcatgggacccagaggtcttcctggttcccctggaaatatcggccccgctggaaaagaaggtcctgtcggcctccctggcatcgacggcaggcctggcccaattggcccagctggagcaagaggagagcctggcaacattggattccctggacccaaaggccccactggtgatcctggcaaaaacggtgataaaggtcatgctggtcttgctggtgctcggggtgctccaggtcctgatggaaacaatggtgctcagggacctcctggaccacagggtgttcaaggtggaaaaggtgaacagggtccccctggtcctccaggcttccagggtctgcctggcccctcaggtcccgctggtgaagttggcaaaccaggagaaaggggtctccatggtgagtttggtctccctggtcctgctggtccaagaggggaacgcggtcccccaggtgagagtggtgctgccggtcctactggtcctattggaagccgaggtccttctggacccccagggcctgatggaaacaagggtgaacctggtgtggttggtgctgtgggcactgctggtccatctggtcctagtggactcccaggagagaggggtgctgctggcatacctggaggcaagggagaaaagggtgaacctggtctcagaggtgaaattggtaaccctggcagagatggtgctcgtggtgctcctggtgctgtaggtgcccctggtcctgctggagccacaggtgaccggggcgaagctggggctgctggtcctgctggtcctgctggtcctcggggaagccctggtgaacgtggtgaggtcggtcctgctggccccaatggatttgctggtcctgctggtgctgctggtcaacctggtgctaaaggagaaagaggagccaaagggcctaagggtgaaaacggtgttgttggtcccacaggccccgttggagctgctggcccagctggtccaaatggtccccccggtcctgctggaagtcgtggtgatggaggcccccctggtatgactggtttccctggtgctgctggacggactggtcccccaggaccctctggtatttctggccctcctggtccccctggtcctgctgggaaagaagggcttcgtggtcctcgtggtgaccaaggtccagttggccgaactggagaagtaggtgcagttggtccccctggcttcgctggtgagaagggtccctctggagaggctggtactgctggacctcctggcactccaggtcctcagggtcttcttggtgctcctggtattctgggtctccctggctcgagaggtgaacgtggtctaccaggtgttgctggtgctgtgggtgaacctggtcctcttggcattgccggccctcctggggcccgtggtcctcctggtgctgtgggtagtcctggagtcaacggtgctcctggtgaagctggtcgtgatggcaaccctgggaacgatggtcccccaggtcgcgatggtcaacccggacacaagggagagcgcggttaccctggcaatattggtcccgttggtgctgcaggtgcacctggtcctcatggccccgtgggtcctgctggcaaacatggaaaccgtggtgaaactggtccttctggtcctgttggtcctgctggtgctgttggcccaagaggtcctagtggcccacaaggcattcgtggcgataagggagagcccggtgaaaaggggcccagaggtcttcctggcttaaagggacacaatggattgcaaggtctgcctggtatcgctggtcaccatggtgatcaaggtgctcctggctccgtgggtcctgctggtcctaggggccctgctggtccttctggccctgctggaaaagatggtcgcactggacatcctggtacagttggacctgctggcattcgaggccctcagggtcaccaaggccctgctggcccccctggtccccctggccctcctggacctccaggtgtaagcggtggtggttatgactttggttacgatggagacttctacagggctgaccagcctcgctcagcaccttctctcagacccaaggactatgaagttgatgctactctgaagtctctcaacaaccagattgagacccttcttactcctgaaggctctagaaagaacccagctcgcacatgccgtgacttgagactcagccacccagagtggagcagtggttactactggattgaccctaaccaaggatgcactatggatgctatcaaagtatactgtgatttctctactggcgaaacctgtatccgggcccaacctgaaaacatcccagccaagaactggtataggagctccaaggacaagaaacacgtctggctaggagaaactatcaatgctggcagccagtttgaatataatgtagaaggagtgacttccaaggaaatggctacccaacttgccttcatgcgcctgctggccaactatgcctctcagaacatcacctaccactgcaagaacagcattgcatacatggatgaggagactggcaacctgaaaaaggctgtcattctacagggctctaatgatgttgaacttgttgctgagggcaacagcaggttcacttacactgttcttgtagatggctgctctaaaaagacaaatgaatggggaaagacaatcattgaatacaaaacaaataagccatcacgcctgcccttccttgatattgcacctttggacatcggtggtgctgaccaggaattctttgtggacattggcccagtctgtttcaaataaatgaactcaatctaaattaaaaaagaaagaaatttgaaaaaactttctctttgccatttcttcttcttcttttttaactgaaagctgaatccttccatttcttctgcacatctacttgcttaaattgtgggcaaaagagaaaaagaaggattgatcagagcattgtgcaatacagtttcattaactccttcccccgctcccccaaaaatttgaatttttttttcaacactcttacacctgttatggaaaatgtcaacctttgtaagaaaaccaaaataaaaattgaaaaataaaaaccataaacatttgcaccacttgtggcttttgaatatcttccacagagggaagtttaaaacccaaacttccaaaggtttaaactacctcaaaacactttcccatgagtgtgatccacattgttaggtgctgacctagacagagatgaactgaggtccttgttttgttttgttcataatacaaaggtgctaattaatagtatttcagatacttgaagaatgttgatggtgctagaagaatttgagaagaaatactcctgtattgagttgtatcgtgtggtgtattttttaaaaaatttgatttagcattcatattttccatcttattcccaattaaaagtatgcagattatttgcccaaatcttcttcagattcagcatttgttctttgccagtctcattttcatcttcttccatggttccacagaagctttgtttcttgggcaagcagaaaaattaaattgtacctattttgtatatgtgagatgtttaaataaattgtgaaaaaaatgaaataaagcatgtttggttttccaaaagaa" 
max_key = 0 
max_val = 0 

for i in range(len(COL1A2) - k + 1):
  key = COL1A2[i:k+i]
  if key not in podstroki:
    podstroki[key] = 1
  else:
    podstroki[key] += 1
#print(podstroki)    

# Выведете три самые частые k-мера (слова длины k) вместе с числом повторений. 
for key, value in podstroki.items():
  if value > max_val:
    max_key = key 
    max_val = value
print(max_key, max_val)                
del podstroki[max_key]

if podstroki:
  max_key = 0
  max_val = 0 
  for key, value in podstroki.items():
    if value > max_val:
      max_key = key 
      max_val = value
  print(max_key, max_val)                
  del podstroki[max_key] 

if podstroki:
  max_key = 0
  max_val = 0 
  for key, value in podstroki.items():
    if value > max_val:
      max_key = key 
      max_val = value
  print(max_key, max_val)                  
